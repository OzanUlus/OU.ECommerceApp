    //DiscountMS
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7071
        }
      ],
      "UpstreamPathTemplate": "/services/discount/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "DiscountFullPermission" ]
      }
    },
    //OrderMS
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7072
        }
      ],
      "UpstreamPathTemplate": "/services/order/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "OrderFullPermission" ]
      }
    },
    //CargoMS
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7073
        }
      ],
      "UpstreamPathTemplate": "/services/cargo/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CargoFullPermission" ]
      }
    },
    //BasketMS
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7074
        }
      ],
      "UpstreamPathTemplate": "/services/basket/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "BasketFullPermission" ]
      }
    },
    //CommentMS
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7075
        }
      ],
      "UpstreamPathTemplate": "/services/comment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "CommentFullPermission" ]
      }
    },
    //PaymentMS
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7076
        }
      ],
      "UpstreamPathTemplate": "/services/payment/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "PaymentFullPermission" ]
      }
    },
    //ImagesMS
    {
      "DownstreamPathTemplate": "/api/{everything}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 7077
        }
      ],
      "UpstreamPathTemplate": "/services/images/{everything}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ],
      "UpstreamScheme": "http",
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "OcelotAuthenticationScheme",
        "AllowedScopes": [ "ImagesFullPermission" ]
      }
    }

    ---------------------------------------------------------------------------------------------------------------------------
    Login Index

     var client = _httpClientFactory.CreateClient();
            var content = new StringContent(JsonSerializer.Serialize(loginDto), Encoding.UTF8, "application/json");
            var responseMessage = await client.PostAsync("http://localhost:5001/api/Logins", content);
            if (responseMessage.IsSuccessStatusCode)
            {
                var jsonData = await responseMessage.Content.ReadAsStringAsync();
                var tokenModel = JsonSerializer.Deserialize<JwtResponseModel>(jsonData, new JsonSerializerOptions
                {
                    PropertyNamingPolicy = JsonNamingPolicy.CamelCase
                });

                if (tokenModel != null)
                {
                    JwtSecurityTokenHandler handler = new JwtSecurityTokenHandler();
                    var token = handler.ReadJwtToken(tokenModel.Token);
                    var claims = token.Claims.ToList();

                    if (tokenModel.Token != null)
                    {
                        claims.Add(new Claim("ouecommercetoken", tokenModel.Token));
                        var claimsIdentity = new ClaimsIdentity(claims, JwtBearerDefaults.AuthenticationScheme);
                        var authProps = new AuthenticationProperties()
                        {
                            ExpiresUtc = tokenModel.ExpireDate,
                            IsPersistent = true
                        };
                        
                        await HttpContext.SignInAsync(JwtBearerDefaults.AuthenticationScheme, new ClaimsPrincipal(claimsIdentity), authProps);
                        var id = _loginService.GetUserId;
                        return RedirectToAction("Index","Default");
                    }
                }

            }
            return View();